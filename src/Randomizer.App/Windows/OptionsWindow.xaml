<Window x:Class="Randomizer.App.Windows.OptionsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:Randomizer.App.Controls"
        xmlns:vm="clr-namespace:Randomizer.App.ViewModels"
        xmlns:options="clr-namespace:Randomizer.Data.Options;assembly=Randomizer.Data"
        xmlns:app="clr-namespace:Randomizer.App"
        xmlns:enums="clr-namespace:Randomizer.Shared.Enums;assembly=Randomizer.Shared"
        x:Name="Self"
        ResizeMode="NoResize"
        mc:Ignorable="d"
        Title="Options - SMZ3 Cas' Randomizer"
        Loaded="Self_Loaded"
        Height="480"
        Width="520">
  <Window.DataContext>
    <options:GeneralOptions></options:GeneralOptions>
  </Window.DataContext>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <Grid Grid.Row="0"
          Grid.IsSharedSizeScope="True">
      <ScrollViewer VerticalScrollBarVisibility="Auto"
                    HorizontalScrollBarVisibility="Disabled">
        <StackPanel Orientation="Vertical">
          <Expander IsExpanded="True">
            <Expander.Header>
              <TextBlock FontWeight="SemiBold">Randomizer options</TextBlock>
            </Expander.Header>
            <StackPanel Orientation="Vertical"
                        Margin="24,11,11,0">

              <controls:LabeledControl Text="ALttP Japanese v1.0 ROM (required):">
                <controls:FileSystemInput x:Name="ZeldaRomFileSystemInput"
                                          Path="{Binding Z3RomPath, Mode=TwoWay}"
                                          Filter="SNES ROMs (*.sfc, *.smc)|*.sfc;*.smc|All files (*.*)|*.*"
                                          DialogTitle="Select 'A Link to the Past' ROM"
                                          OnPathUpdated="ZeldaRomFileSystemInput_OnOnPathUpdated" />
              </controls:LabeledControl>

              <controls:LabeledControl Text="Super Metroid Japanese/US ROM (required):">
                <controls:FileSystemInput x:Name="MetroidRomFileSystemInput"
                                          Path="{Binding SMRomPath, Mode=TwoWay}"
                                          Filter="SNES ROMs (*.sfc, *.smc)|*.sfc;*.smc|All files (*.*)|*.*"
                                          DialogTitle="Select 'Super Metroid' ROM"
                                          OnPathUpdated="MetroidRomFileSystemInput_OnOnPathUpdated"/>
              </controls:LabeledControl>

              <controls:LabeledControl Text="ROM output folder:">
                <controls:FileSystemInput Path="{Binding RomOutputPath, Mode=TwoWay}"
                                          IsFolderPicker="True"
                                          DialogTitle="Select ROM output folder" />
              </controls:LabeledControl>

              <controls:LabeledControl Text="MSU parent folder:">
                <controls:FileSystemInput Path="{Binding MsuPath, Mode=TwoWay}"
                                          IsFolderPicker="True"
                                          DialogTitle="Select MSU parent folder"
                                          OnPathUpdated="FileSystemInput_OnOnPathUpdated"
                                          />
              </controls:LabeledControl>

              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"></ColumnDefinition>
                  <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Vertical">
                  <CheckBox IsChecked="{Binding CheckForUpdatesOnStartup}"
                            VerticalAlignment="Center"
                            Margin="0">Check for updates on startup</CheckBox>
                  <CheckBox IsChecked="{Binding DownloadConfigsOnStartup}"
                            VerticalAlignment="Center"
                            Margin="0">Download tracker config updates on startup</CheckBox>
                  <CheckBox IsChecked="{Binding DownloadSpritesOnStartup}"
                            VerticalAlignment="Center"
                            Margin="0">Download sprite updates on startup</CheckBox>
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Vertical">
                  <Button Name="UpdateConfigsButton" Click="UpdateConfigsButton_OnClick" Margin="0 0 0 0">
                    Update Configs
                  </Button>
                  <Button Name="UpdateSpritesButton" Click="UpdateSpritesButton_OnClick" Margin="0 5 0 0">
                    Update Sprites
                  </Button>
                </StackPanel>
              </Grid>

            </StackPanel>
          </Expander>

          <Expander IsExpanded="False">
            <Expander.Header>
              <TextBlock FontWeight="SemiBold">Tracker options</TextBlock>
            </Expander.Header>
            <StackPanel Orientation="Vertical"
                        Margin="24,11,11,0">

              <controls:LabeledControl Text="Tracker background color:">
                <StackPanel Orientation="Horizontal">
                  <Border x:Name="ColorPreview"
                          BorderThickness="1"
                          BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                          Height="23"
                          Width="23"
                          Margin="0,0,3,0">
                    <Rectangle Fill="{Binding TrackerBGColor,
                Converter={StaticResource ColorBrushConverter}}" />
                  </Border>
                  <TextBox Text="{Binding TrackerBGColor,
              Converter={StaticResource ColorConverter},
              Mode=TwoWay}"
                           MinWidth="80" />
                  <CheckBox IsChecked="{Binding TrackerShadows}"
                            VerticalAlignment="Center"
                            Margin="7,0">Render shadows</CheckBox>
                </StackPanel>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Tracker recognition threshold:"
                                       ToolTip="Determines the minimum speech recognition confidence for Tracker to recognize commands.&#x0a;Anything below this threshold will be ignored completely.&#x0a;&#x0a;Increase this if Tracker is incorrectly recognizing something as a voice command, for example when talking to other people.">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <TextBlock Grid.Column="0"
                             Text="{Binding TrackerRecognitionThreshold, StringFormat=P1}"
                             Margin="0,3,7,3" />
                  <Slider Grid.Column="1"
                          Value="{Binding TrackerRecognitionThreshold}"
                          Minimum="0.0"
                          Maximum="1.0"
                          SmallChange="0.05"
                          LargeChange="0.2"
                          TickFrequency="0.05"
                          TickPlacement="BottomRight"
                          Orientation="Horizontal"
                          HorizontalAlignment="Stretch" />
                </Grid>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Tracker execution threshold:"
                                       ToolTip="Determines the minimum speech recognition confidence for Tracker to execute a voice command.&#x0a;Anything below this level will not be executed, but may result in Tracker asking you to repeat yourself.&#x0a;&#x0a;Increase this to prevent Tracker from incorrectly recognizing a voice command, for example tracking the wrong item.">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <TextBlock Grid.Column="0"
                             Text="{Binding TrackerConfidenceThreshold, StringFormat=P1}"
                             Margin="0,3,7,3" />
                  <Slider Grid.Column="1"
                          Value="{Binding TrackerConfidenceThreshold}"
                          Minimum="0.0"
                          Maximum="1.0"
                          SmallChange="0.05"
                          LargeChange="0.2"
                          TickFrequency="0.05"
                          TickPlacement="BottomRight"
                          Orientation="Horizontal"
                          HorizontalAlignment="Stretch" />
                </Grid>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Tracker spoiler threshold:"
                                       ToolTip="Determines the minimum speech recognition confidence for Tracker to give potential spoilers in responses, e.g. when mis-tracking an item.">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <TextBlock Grid.Column="0"
                             Text="{Binding TrackerConfidenceSassThreshold, StringFormat=P1}"
                             Margin="0,3,7,3" />
                  <Slider Grid.Column="1"
                          Value="{Binding TrackerConfidenceSassThreshold}"
                          Minimum="0.0"
                          Maximum="1.0"
                          SmallChange="0.05"
                          LargeChange="0.2"
                          TickFrequency="0.05"
                          TickPlacement="BottomRight"
                          Orientation="Horizontal"
                          HorizontalAlignment="Stretch" />
                </Grid>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Launch button behavior:"
                                       ToolTip="Determines default behavior when clicking on the Launch button for a generated rom.">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <ComboBox SelectedItem="{Binding LaunchButtonOption, Converter={StaticResource EnumDescriptionConverter}}"
                            ItemsSource="{Binding Source={app:EnumDescriptionBindingSource {x:Type options:LaunchButtonOptions}}}"
                            MinWidth="75">
                  </ComboBox>
                </Grid>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Launch application:"
                                       ToolTip="Determines the application to launch for the rom. If not supplied, it will use the system default for sfc files.">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <TextBox Name="LaunchApplicationTextBox" Text="{Binding LaunchApplication, Mode=TwoWay}" />
                </Grid>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Launch arguments:"
                                       ToolTip="Arguments to be passed to the launch application, if needed. %rom% will be replaced with the rom path. If %rom% is not in the launch argument, the rom path will be passed at the end.">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <TextBox Name="LaunchArgumentsTextbox" Text="{Binding LaunchArguments, Mode=TwoWay}" />
                </Grid>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Tracker voice frequency:"
                                       ToolTip="Determines how much tracker will say in response to events.">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <ComboBox SelectedItem="{Binding TrackerVoiceFrequency, Converter={StaticResource EnumDescriptionConverter}}"
                            ItemsSource="{Binding Source={app:EnumDescriptionBindingSource {x:Type enums:TrackerVoiceFrequency}}}"
                            MinWidth="75">
                  </ComboBox>
                </Grid>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Speech recognition mode:"
                                       ToolTip="Determines how tracker listens for voice lines">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <ComboBox SelectedItem="{Binding SpeechRecognitionMode, Converter={StaticResource EnumDescriptionConverter}}"
                            ItemsSource="{Binding Source={app:EnumDescriptionBindingSource {x:Type options:SpeechRecognitionMode}}}"
                            MinWidth="75">
                  </ComboBox>
                </Grid>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Push-to-talk key:"
                                       ToolTip="Key to hold down for push-to-talk mode">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <ComboBox SelectedItem="{Binding PushToTalkKey, Converter={StaticResource EnumDescriptionConverter}}"
                            ItemsSource="{Binding Source={app:EnumDescriptionBindingSource {x:Type options:PushToTalkKey}}}"
                            MinWidth="75">
                  </ComboBox>
                </Grid>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Push-to-talk device:"
                                       ToolTip="Device used for push-to-talk mode.">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <ComboBox SelectedValue="{Binding PushToTalkDevice}"
                            ItemsSource="{Binding PushToTalkDevices, ElementName=Self}"
                            SelectedValuePath="Key"
                            DisplayMemberPath="Value"
                            MinWidth="75">
                  </ComboBox>
                </Grid>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Undo expiration time:"
                                       ToolTip="Specifies how many minutes you have to undo a tracker action to limit accidentally undoing actions.">
                <TextBox Name="UndoExpirationTimeTextBox" Text="{Binding UndoExpirationTime, Mode=TwoWay}" LostFocus="UndoExpirationTimeTextBox_OnLostFocus" />
              </controls:LabeledControl>

              <controls:LabeledControl Text="Auto Tracker scripts folder:">
                <controls:FileSystemInput Path="{Binding AutoTrackerScriptsOutputPath, Mode=TwoWay}"
                                          IsFolderPicker="True"
                                          DialogTitle="Select Auto Tracker scripts folder" />
              </controls:LabeledControl>

              <controls:LabeledControl Text="Auto Tracker default connection:"
                                       ToolTip="Determines the starting connection type when starting the tracker">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <ComboBox SelectedItem="{Binding AutoTrackerDefaultConnectionType, Converter={StaticResource EnumDescriptionConverter}}"
                            ItemsSource="{Binding Source={app:EnumDescriptionBindingSource {x:Type options:EmulatorConnectorType}}}"
                            MinWidth="75">
                  </ComboBox>
                </Grid>
              </controls:LabeledControl>

              <controls:LabeledControl Text="QUSB2SNES Ip Address:"
                                       ToolTip="QUSB2SNES override IP address. Leave blank to use the default">
                <TextBox Text="{Binding AutoTrackerQUsb2SnesIp}"/>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Current song display style:"
                                       ToolTip="Changes the orientation of the information displayed in the current song window and the written text file with the current song.">
                <ComboBox SelectedItem="{Binding MsuTrackDisplayStyle, Converter={StaticResource EnumDescriptionConverter}}"
                          ItemsSource="{Binding Source={app:EnumDescriptionBindingSource {x:Type options:MsuTrackDisplayStyle}}}"
                          MinWidth="75">
                </ComboBox>
              </controls:LabeledControl>

              <controls:LabeledControl Text="Current song output path:"
                                       ToolTip="The text file that is written whenever the current song changes">
                <controls:FileSystemInput Path="{Binding MsuTrackOutputPath, Mode=TwoWay}"
                                          Filter="Text Files (*.txt)|*.txt|All files (*.*)|*.*"
                                          IsSavePicker="True"
                                          DialogTitle="Current song output path" />
              </controls:LabeledControl>

              <StackPanel Orientation="Horizontal">

              </StackPanel>

              <WrapPanel>
                <CheckBox Content="Auto Tracker Updates Map Automatically"
                          IsChecked="{Binding AutoTrackerChangeMap}" />

                <CheckBox Content="Auto Track Viewed Events"
                          ToolTip="Automatically track things that are viewed, such as dungeon rewards when looking the map and dungeon requirements when near their entrances."
                          IsChecked="{Binding AutoSaveLookAtEvents}" />

                <CheckBox Content="Enable hints"
                          IsChecked="{Binding TrackerHintsEnabled}" />

                <CheckBox Content="Enable spoilers"
                          IsChecked="{Binding TrackerSpoilersEnabled}" />
              </WrapPanel>

            </StackPanel>
          </Expander>

          <Expander>
            <Expander.Header>
              <TextBlock FontWeight="SemiBold">Twitch integration</TextBlock>
            </Expander.Header>
            <StackPanel Orientation="Vertical"
                        Margin="24,11,11,0">
              <controls:LabeledControl Text="Twitch user name:"
                                       ToolTip="The name of the logged-in user. This could be either your own account, or that of a bot.">
                <TextBox Text="{Binding TwitchUserName, Mode=TwoWay}"
                         IsEnabled="{Binding IsLoggingIn, ElementName=Self}" />
              </controls:LabeledControl>

              <controls:LabeledControl Text="Twitch channel:"
                                       ToolTip="The channel to join and monitor for messages. This should be your own channel, even if you use a bot account above.">
                <TextBox Text="{Binding TwitchChannel, Mode=TwoWay}"
                         IsEnabled="{Binding IsLoggingIn, ElementName=Self}" />
              </controls:LabeledControl>

              <controls:LabeledControl Text="Twitch id:"
                                       ToolTip="User id from Twitch that is used for advanced Twitch integration. Requires you to be logged into your own account rather than a bot.">
                <TextBox Text="{Binding TwitchId, Mode=TwoWay}"
                         IsEnabled="{Binding IsLoggingIn, ElementName=Self}" />
              </controls:LabeledControl>

              <controls:LabeledControl Text="">
                <StackPanel Orientation="Horizontal">
                  <Button x:Name="TwitchLoginButton"
                          Click="TwitchLoginButton_Click"
                          Content="Log in with Twitch"
                          IsEnabled="{Binding IsLoggingIn, ElementName=Self}"
                          Margin="0"
                          HorizontalAlignment="Left" />
                  <Button x:Name="TwitchLogoutButton"
                          Click="TwitchLogoutButton_Click"
                          Content="Log out"
                          IsEnabled="{Binding IsLoggingIn, ElementName=Self}"
                          Visibility="Collapsed"
                          Margin="0"
                          HorizontalAlignment="Left" />
                  <TextBlock x:Name="TwitchLoginFeedback"
                             VerticalAlignment="Center"
                             Margin="5"
                             FontWeight="SemiBold"></TextBlock>
                </StackPanel>
              </controls:LabeledControl>

              <CheckBox x:Name="EnableChatGreetingCheckBox"
                        Content="Enable responding to chat"
                        ToolTip="When this is checked, Tracker will monitor chat for greetings and greet viewers in response."
                        IsChecked="{Binding EnableChatGreeting}" />
              <controls:LabeledControl Text="Stop responding to chat after:"
                                       ToolTip="After this many minutes have expired, Tracker will no longer greet users in chat."
                                       IsEnabled="{Binding IsChecked, ElementName=EnableChatGreetingCheckBox}">
                <StackPanel Orientation="Horizontal">
                  <TextBox Text="{Binding ChatGreetingTimeLimit}"
                           Width="40"
                           HorizontalAlignment="Left" />
                  <TextBlock VerticalAlignment="Center"
                             Margin="3,0,0,0">minutes</TextBlock>
                </StackPanel>
              </controls:LabeledControl>

              <controls:LabeledControl Text="GT Guessing Game Style:"
                                       ToolTip="How the winner(s) of the GT guessing game should be determined">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <ComboBox SelectedItem="{Binding GanonsTowerGuessingGameStyle, Converter={StaticResource EnumDescriptionConverter}}"
                            ItemsSource="{Binding Source={app:EnumDescriptionBindingSource {x:Type enums:GanonsTowerGuessingGameStyle}}}"
                            MinWidth="75">
                  </ComboBox>
                </Grid>
              </controls:LabeledControl>

              <CheckBox x:Name="EnableChatPolls"
                        Content="Enable poll creation"
                        ToolTip="When this is checked, Tracker can create polls on your behalf. Note: You cannot use a bot account for this."
                        IsChecked="{Binding EnablePollCreation}" />

            </StackPanel>
          </Expander>

          <Expander>
            <Expander.Header>
              <TextBlock FontWeight="SemiBold">Tracker Profiles</TextBlock>
            </Expander.Header>
            <StackPanel Orientation="Vertical"
                        Margin="24,11,11,0">
              <TextBlock TextWrapping="Wrap"
                         Margin="0,0,0,5">All selected profiles in the right column will be combined in the order from top to bottom. In case of overrides, such as Tracker item images, the bottom most will be used.</TextBlock>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <DockPanel Grid.Column="0">
                  <TextBlock DockPanel.Dock="Top">Disabled</TextBlock>
                  <ListBox ItemsSource="{Binding DisabledProfiles, ElementName=Self}"
                           Name="DisabledProfilesListBox">
                  </ListBox>
                </DockPanel>
                <DockPanel Grid.Column="2">
                  <TextBlock DockPanel.Dock="Top">Enabled</TextBlock>
                  <ListBox ItemsSource="{Binding EnabledProfiles, ElementName=Self}"
                           Name="EnabledProfilesListBox">

                  </ListBox>
                </DockPanel>
                <StackPanel Grid.Column="1">
                  <Button Margin="7,20,7,0"
                          MinWidth="25"
                          Name="EnableProfile"
                          Click="EnableProfile_Click">
                    &#x3e;
                  </Button>
                  <Button Margin="7,5,7,0"
                          MinWidth="25"
                          Name="DisableProfile"
                          Click="DisableProfile_Click">
                    &#x3c;
                  </Button>
                  <Button Margin="7,5,7,0"
                          MinWidth="25"
                          Name="MoveProfileUp"
                          Click="MoveProfileUp_Click">
                    &#8743;
                  </Button>
                  <Button Margin="7,5,7,5"
                          MinWidth="25"
                          Name="MoveProfileDown"
                          Click="MoveProfileDown_Click">
                    &#8744;
                  </Button>
                </StackPanel>
              </Grid>
              <StackPanel Orientation="Horizontal"
                          Margin="0,10,0,0"
                          HorizontalAlignment="Right">
                <Button Name="RefreshProfilesButton"
                        Click="RefreshProfilesButton_Click">
                  <TextBlock>Refresh Profiles</TextBlock>
                </Button>
                <Button Name="OpenProfilesFolderButton"
                        Click="OpenProfilesFolderButton_Click">
                  <TextBlock>Open Profiles Folder</TextBlock>
                </Button>
              </StackPanel>
            </StackPanel>
          </Expander>
        </StackPanel>
      </ScrollViewer>
    </Grid>

    <Border Grid.Row="1"
            Padding="11"
            Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
            BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
            BorderThickness="0,1,0,0">
      <StackPanel Orientation="Horizontal"
                  HorizontalAlignment="Right">
        <Button IsDefault="True"
                x:Name="OkButton"
                Click="OkButton_Click">OK</Button>
      </StackPanel>
    </Border>
  </Grid>
</Window>
