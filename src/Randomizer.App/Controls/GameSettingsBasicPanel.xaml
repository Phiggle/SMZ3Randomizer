<UserControl x:Class="Randomizer.App.Controls.GameSettingsBasicPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Randomizer.App.Controls"
             xmlns:viewModels="clr-namespace:Randomizer.Data.ViewModels;assembly=Randomizer.Data"
             mc:Ignorable="d"
             Loaded="GameSettingsBasicPanel_OnLoaded"
             d:DesignHeight="300" d:DesignWidth="300">
  <UserControl.DataContext>
    <viewModels:GenerationWindowViewModel></viewModels:GenerationWindowViewModel>
  </UserControl.DataContext>
  <StackPanel Orientation="Vertical">
    <GroupBox Header="Common">
      <StackPanel Orientation="Vertical">

        <TextBlock>Presets</TextBlock>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
          </Grid.ColumnDefinitions>
          <ComboBox Grid.Column="0"
                    ItemsSource="{Binding Basic.Presets}"
                    SelectedItem="{Binding Basic.SelectedPreset}"
                    DisplayMemberPath="PresetName"
          ></ComboBox>
          <Button Grid.Column="1"
                  Margin="5 0 0 0"
                  Name="ApplyPresetButton"
                  Click="ApplyPresetButton_OnClick"
                  IsEnabled="{Binding Basic.CanApplyPreset}"
          >Apply Preset</Button>
          <Button Grid.Column="2"
                  Margin="5 0 0 0"
                  Name="DeletePresetButton"
                  Click="DeletePresetButton_OnClick"
                  IsEnabled="{Binding Basic.CanDeletePreset}"
          >Delete Preset</Button>
        </Grid>

        <TextBlock Margin="0 5 0 0">Import Settings</TextBlock>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
          </Grid.ColumnDefinitions>
          <TextBox Grid.Column="0"
                   Text="{Binding Basic.ImportString}"
                   x:Name="ImportStringTextBox"
                   TextChanged="ImportStringTextBoxBase_OnTextChanged"
          ></TextBox>
          <Button Grid.Column="1"
                  Margin="5 0 0 0"
                  Name="ImportSeedButton"
                  Click="ImportSeedButton_OnClick"
                  IsEnabled="{Binding Basic.CanApplyConfigString, Mode=OneWay}"
          >Import Settings &amp; Seed Number</Button>
          <Button Grid.Column="2"
                  Margin="5 0 0 0"
                  Name="ImportSettingsButton"
                  Click="ImportSettingsButton_OnClick"
                  IsEnabled="{Binding Basic.CanApplyConfigString, Mode=OneWay}"
          >Import Settings Only</Button>
        </Grid>

        <TextBlock Margin="0 5 0 0">Seed</TextBlock>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
          </Grid.ColumnDefinitions>
          <TextBox Grid.Column="0"
                   Text="{Binding Basic.Seed}"
                   x:Name="SeedTextBox"
                   TextChanged="SeedTextBox_OnTextChanged"
          ></TextBox>
          <Button Grid.Column="1"
                  Margin="5 0 0 0"
                  Name="ClearSeedButton"
                  Click="ClearSeedButton_OnClick"
                  IsEnabled="{Binding Basic.CanClearSeed, Mode=OneWay}"
          >Clear Seed</Button>
        </Grid>

        <TextBlock Margin="0 5 0 0">Summary</TextBlock>
        <TextBox Height="150" IsReadOnly="True" Text="{Binding Basic.Summary}"></TextBox>

      </StackPanel>

    </GroupBox>

    <GroupBox Header="Basic Customization" Margin="0 5 0 0">

      <StackPanel Orientation="Vertical">

        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
          </Grid.RowDefinitions>

          <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center">Link Sprite</TextBlock>
          <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Basic.LinkSpriteName}" HorizontalAlignment="Center"></TextBlock>
          <Button Grid.Column="0" Grid.Row="2" Padding="5" Height="102" Name="LinkSpriteButton" Click="LinkSpriteButton_OnClick">
            <Image Source="{Binding Basic.LinkSpritePath}" />
          </Button>

          <TextBlock Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center">Samus Sprite</TextBlock>
          <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Basic.SamusSpriteName}" HorizontalAlignment="Center"></TextBlock>
          <Button Grid.Column="1" Grid.Row="2" Padding="5" Height="102" Name="SamusSpriteButton" Click="SamusSpriteButton_OnClick">
            <Image Source="{Binding Basic.SamusSpritePath}" />
          </Button>

          <TextBlock Grid.Column="2" Grid.Row="0" HorizontalAlignment="Center">Ship Sprite</TextBlock>
          <TextBlock Grid.Column="2" Grid.Row="1" Text="{Binding Basic.ShipSpriteName}" HorizontalAlignment="Center"></TextBlock>
          <Button Grid.Column="2" Grid.Row="2" Padding="5" Height="102" Name="ShipSpriteButton" Click="ShipSpriteButton_OnClick">
            <Image Source="{Binding Basic.ShipSpritePath}" Height="92" />
          </Button>

        </Grid>

        <TextBlock Margin="0 5 0 0">Custom Music Pack</TextBlock>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
          </Grid.ColumnDefinitions>
          <TextBox Grid.Column="0" Name="SelectedMsuTextBox" IsReadOnly="True" Text="{Binding Basic.MsuText}"></TextBox>
          <StackPanel Grid.Column="1" Orientation="Horizontal"
                      HorizontalAlignment="Right">
            <Button x:Name="SelectMsuButton" Click="SelectMsuButton_OnClick">Select _MSU</Button>
            <Button x:Name="MsuOptionsButton"
                    MinWidth="0"
                    Width="23"
                    Content="▼"
                    FontSize="8"
                    Click="MsuOptionsButton_OnClick"
                    BorderThickness="0,1,1,1"
                    Margin="0,0,0,0">
              <Button.ContextMenu>
                <ContextMenu>
                  <MenuItem Header="Pick _Random MSU from List" Name="RandomMsuMenuItem" Click="RandomMsuMenuItem_OnClick"></MenuItem>
                  <MenuItem Header="Create _Shuffled MSU" Name="ShuffledMsuMenuItem" Click="ShuffledMsuMenuItem_OnClick"></MenuItem>
                  <MenuItem Header="_Continuously Reshuffle MSU" Name="ContinuousShuffleMsuMenuItem" Click="ContinuousShuffleMsuMenuItem_OnClick"></MenuItem>
                  <MenuItem Header="Select MSU _File" Name="SelectMsuFileMenuItem" Click="SelectMsuFileMenuItem_OnClick"></MenuItem>
                  <MenuItem Header="Play _Vanilla Music" Name="VanillaMusicMenuItem" Click="VanillaMusicMenuItem_OnClick"></MenuItem>
                </ContextMenu>
              </Button.ContextMenu>
            </Button>
          </StackPanel>
        </Grid>
      </StackPanel>

    </GroupBox>
  </StackPanel>
</UserControl>

